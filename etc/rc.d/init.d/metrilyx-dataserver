#!/bin/sh
#
# chkconfig: 234 90 10
# description: Metrilyx Data Server.  This provides data via websockets.
#

[ -f "/etc/rc.d/init.d/functions" ] && . /etc/rc.d/init.d/functions

NAME="metrilyx-dataserver"
APP_HOME="/opt/metrilyx"
BIN=${APP_HOME}/bin/${NAME}.py
LOGFILE=/var/log/metrilyx/${NAME}.log
LOGLEVEL="WARNING"
PGREP="/usr/bin/pgrep -f"

## set -c to 0 spawn servers based on the number of cpus/cores
DEFAULT_OPTS="-e 80 -c 0 -l "${LOGLEVEL}

RETVAL=0

start() {
	PIDS=`${PGREP} "${BIN} ${DEFAULT_OPTS}" | xargs`;
	if [ "$PIDS" = "" ]; then
		echo -n "${NAME} starting... "
		${BIN} ${DEFAULT_OPTS} > ${LOGFILE} 2>&1 &
		sleep 1;
		PIDS=`${PGREP} "${BIN} ${DEFAULT_OPTS}" | xargs`;
		if [ "$PIDS" = "" ]; then
			echo "[failed]";
			RETVAL=2;
		else
			echo "[ok]";
		fi
	else
		echo -n "${NAME} already running... ${PIDS}";
		RETVAL=1
	fi
}
status() {
	PIDS=`${PGREP} "${BIN} ${DEFAULT_OPTS}" | xargs`;
	if [ "$PIDS" = "" ]; then
		echo "${NAME} not running";
	else
		echo "${NAME} running... ${PIDS}"
	fi
}
stop() {
	PIDS=`${PGREP} "${BIN} ${DEFAULT_OPTS}" | sort -r`;
	for pid in $PIDS; do
		kill $pid;
	done
	${PGREP} "${BIN} ${DEFAULT_OPTS}" || echo "${NAME} stopped";
}

case "$1" in
	start)
		start;
		;;
	stop)
		stop;
		;;
	status)
		status;
		;;
	restart)
		$0 stop
		sleep 3
		$0 start
		;;
	*)
		echo "$0 [start|stop|restart|status]"
		exit 1;
esac
exit 0
