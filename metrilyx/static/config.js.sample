/*
 * Client Side Configuration 
 * 
 * This contains various configuration options for the web UI.
 * The only required  option is SERVER_NAME, unless other parameters have been changed.
 * 
 */

/* 
 * SERVER_NAME should be filled with the hostname of the web server
 *
 */
var SERVER_NAME = "";
/* 
 * This is a list of servers to use for backend calls.
 * This was specifically added to bypass the browser limitation
 * in the number of ajax requests that can be made.
 *
 * It can be a list of cname's to the same server as well.
 * 
 * If supplied some of the ajax calls will use it to rotate through the connection
 * pool to improve load times and user experience.
 *
 * Example: "http://some_fqdn"
 *
 */
var CONN_POOL_CFG = {
	urls: [
		"http://"+SERVER_NAME
	]
};
/* Auth config until auth is enabled. This is just a future placeholder. */
var AUTHCONFIG = {
	modelstore: {
		username: 'admin',
		password: 'metrilyx'
	}
};
/* WebSocket URI */
var WS_URI = "ws://"+SERVER_NAME+"/api/data?compressed=true";
// Annotation poll interval //
var ANNO_POLL_INTERVAL = 75000;
var ANNO_FETCH_TIME_WIN = 300000;

// DO NOT TOUCH BELOW TIHS UNLESS YOU KNOW WHAT YOU ARE DOING //
// Metric poll interval.  //
var METRIC_POLL_INTERVAL = 50000;
// amount of data to fetch.  this needs to be a specific proportion to METRIC_POLL_INTERVAL //
var METRIC_FETCH_TIME_WIN = 900000;
/*
 * - jquery sortable with angular configuration for app
 */
var DNDCONFIG = {
	metricList: {
		scroll:true,
		scrollSensitivity: 5,
		tolerance: "pointer",
		revert: false,
		helper: "clone",
		connectWith: '.graph',
		cursor: '-webkit-grabbing',
		appendTo:"body",
		zindex: 999999,
		disabled:true,
		stop: function(event, ui) {
			var ce = new CustomEvent("refresh-metric-list", 
				{'detail': 'metric list needs a refresh' });
       		document.getElementById('edit-panel').dispatchEvent(ce);
		}
	},
	/* graph in graphs */
	graph: {
		items: "[ng-repeat='graph in pod.graphs']",
		tolerance:"pointer",
		cursor: "move",
		disabled:true,
	},
	/* new pod adder icon */
	pod: {
		connectWith: [ ".layout-column", ".layout-row", ".layout" ],
		/*revert: true,*/
		tolerance: "pointer",
		helper: "clone",
		cursor: '-webkit-grabbing',
		appendTo:"body",
		zindex: 999999,
		disabled:true,
	},
	/* pods within column */
	column: {
		revert: false,
		tolerance: "pointer",
		items: "[ng-model='pod']",
		connectWith: [".layout-column"],
		handle: ".pod-header",
		cursor: "move",
		disabled:true,
		over: function(event, ui) {
			$(event.target).addClass('layout-column-hover');
		},
		out: function(event, ui) {
			$(event.target).removeClass('layout-column-hover');
		},
	},
	row: {
		tolerance: "pointer",
		cursor: "move",
		items: ".layout-column",
		connectWith: [".layout-row"],
		disabled:true,
		/*
		over: function(event, ui) {
			$(event.target).addClass('layout-row-hover');
		},
		out: function(event, ui) {
			$(event.target).removeClass('layout-row-hover');
		}*/
	},
	layout: {
		tolerance: "pointer",
		cursor: "move",
		axis:"y",
		disabled:true,
		over: function(event, ui) {
			$(event.target).addClass('layout-hover');
		},
		out: function(event, ui) {
			$(event.target).removeClass('layout-hover');
		}
	}
};
